// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"
)

// authController is an autogenerated mock type for the authController type
type authController struct {
	mock.Mock
}

// Login provides a mock function with given fields: c
func (_m *authController) Login(c echo.Context) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Register provides a mock function with given fields: c
func (_m *authController) Register(c echo.Context) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewAuthController interface {
	mock.TestingT
	Cleanup(func())
}

// newAuthController creates a new instance of authController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newAuthController(t mockConstructorTestingTnewAuthController) *authController {
	mock := &authController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
